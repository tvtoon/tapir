static const char *rgss1_exe =
 "$KCODE = \"u\"\n"
/* TODO: this is only for developing purpose. */
/* We want to remove it when it becomes unnecessary. */
 "def warn_unimplemented(name)\n"
 "  unimplemented_warnings = eval(\"$unimplemented_warnings ||= {}\")\n"
 "  if !unimplemented_warnings[name]\n"
 "    unimplemented_warnings[name] = true\n"
#ifdef __DEBUG__
 "    $stderr.puts \"unimplemented: #{name}\"\n"
#endif
 "  end\n"
 "end\n"
 "class Font\n"
 "  @@default_name = \"ＭＳ Ｐゴシック\"\n"
 "  @@default_size = 22\n"
 "  @@default_bold = false\n"
 "  @@default_italic = false\n"
 "  @@default_color = Color.new(255, 255, 255, 255)\n"
 "  def self.default_name\n"
 "    @@default_name\n"
 "  end\n"
 "  def self.default_name=(default_name)\n"
 "    @@default_name = default_name\n"
 "  end\n"
 "  def self.default_size\n"
 "    @@default_size\n"
 "  end\n"
 "  def self.default_size=(default_size)\n"
 "    @@default_size = default_size\n"
 "  end\n"
 "  def self.default_bold\n"
 "    @@default_bold\n"
 "  end\n"
 "  def self.default_bold=(default_bold)\n"
 "    @@default_bold = default_bold\n"
 "  end\n"
 "  def self.default_italic\n"
 "    @@default_italic\n"
 "  end\n"
 "  def self.default_italic=(default_italic)\n"
 "    @@default_italic = default_italic\n"
 "  end\n"
 "  def self.default_color\n"
 "    @@default_color\n"
 "  end\n"
 "  def self.default_color=(default_color)\n"
 "    @@default_color = default_color\n"
 "  end\n"
 "end\n"
 "\n"
 "module RPG\n"
 "  class Map\n"
 "    attr_accessor :autoplay_bgm, :autoplay_bgs, :bgm, :bgs, :data, :encounter_list, :encounter_step, :events, :height, :width\n"
 "    attr_accessor :tileset_id\n"
 "    def initialize(width, height)\n"
 "      @autoplay_bgm = false\n"
 "      @autoplay_bgs = false\n"
 "      @encounter_list = []\n"
 "      @encounter_step = 30\n"
 "      @events = {}\n"
 "      @height = height\n"
 "      @width = width\n"
 "      @bgm = RPG::AudioFile.new\n"
 "      @bgs = RPG::AudioFile.new(\"\", 80)\n"
 "      @data = Table.new(width, height, 3)\n"
/* Really??? */
 "      @tileset_id = 1\n"
 "    end\n"
 "  end\n"
 "  class MapInfo\n"
 "    attr_accessor :expanded, :name, :order, :parent_id, :scroll_x, :scroll_y\n"
 "    def initialize\n"
 "      @expanded = false\n"
 "      @name = \"\"\n"
 "      @order = 0\n"
 "      @parent_id = 0\n"
 "      @scroll_x = 0\n"
 "      @scroll_y = 0\n"
 "    end\n"
 "  end\n"
 "  class Event\n"
 "    attr_accessor :id, :name, :pages, :x, :y\n"
 "    def initialize(x, y)\n"
 "      @id = 0\n"
 "      @name = \"\"\n"
 "      @pages = [RPG::Event::Page.new]\n"
 "      @x = x\n"
 "      @y = y\n"
 "    end\n"
 "    class Page\n"
 "      attr_accessor :condition, :direction_fix, :graphic, :list, :move_frequency, :move_route, :move_speed, :move_type, :step_anime, :through, :trigger, :walk_anime\n"
 "      attr_accessor :always_on_top\n"
 "      def initialize\n"
 "        @condition = RPG::Event::Page::Condition.new\n"
 "        @direction_fix = false\n"
 "        @graphic = RPG::Event::Page::Graphic.new\n"
 "        @list = [RPG::EventCommand.new]\n"
 "        @move_frequency = 3\n"
 "        @move_route = RPG::MoveRoute.new\n"
 "        @move_speed = 3\n"
 "        @move_type = 0\n"
 "        @step_anime = false\n"
 "        @through = false\n"
 "        @trigger = 0\n"
 "        @walk_anime = true\n"
 "        @always_on_top = false\n"
 "      end\n"
 "      class Condition\n"
 "        attr_accessor :self_switch_ch, :self_switch_valid, :switch1_id, :switch1_valid, :switch2_id, :switch2_valid, :variable_id, :variable_valid, :variable_value\n"
 "        def initialize\n"
 "          @self_switch_ch = \"A\"\n"
 "          @self_switch_valid = false\n"
 "          @switch1_id = 1\n"
 "          @switch1_valid = false\n"
 "          @switch2_id = 1\n"
 "          @switch2_valid = false\n"
 "          @variable_id = 1\n"
 "          @variable_valid = false\n"
 "          @variable_value = 0\n"
 "        end\n"
 "      end\n"
 "      class Graphic\n"
 "        attr_accessor :character_name, :direction, :pattern, :tile_id\n"
 "        attr_accessor :blend_type, :character_hue, :opacity\n"
 "        def initialize\n"
 "          @character_name = \"\"\n"
 "          @direction = 2\n"
 "          @pattern = 0\n"
 "          @tile_id = 0\n"
 "          @blend_type = 0\n"
 "          @character_hue = 0\n"
 "          @opacity = 255\n"
 "        end\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class EventCommand\n"
 "    attr_accessor :code, :indent, :parameters\n"
 "    def initialize(code = 0, indent = 0, parameters = [])\n"
 "      @code = code\n"
 "      @indent = indent\n"
 "      @parameters = parameters\n"
 "    end\n"
 "  end\n"
 "  class MoveRoute\n"
 "    attr_accessor :list, :repeat, :skippable\n"
 "    def initialize\n"
 "      @list = [RPG::MoveCommand.new]\n"
 "      @repeat = true\n"
 "      @skippable = false\n"
 "    end\n"
 "  end\n"
 "  class MoveCommand\n"
 "    attr_accessor :code, :parameters\n"
 "    def initialize(code = 0, parameters = [])\n"
 "      @code = code\n"
 "      @parameters = parameters\n"
 "    end\n"
 "  end\n"
 "  class Actor\n"
 "    attr_accessor :armor1_id, :armor2_id, :armor3_id, :armor4_id, :class_id, :exp_basis, :exp_inflation, :id, :initial_level, :name, :parameters, :weapon_id\n"
 "    attr_accessor :armor1_fix, :armor2_fix, :armor3_fix, :armor4_fix, :battler_hue, :battler_name, :character_hue, :character_name, :final_level, :weapon_fix\n"
 "    def initialize\n"
 "      @armor1_id = 0\n"
 "      @armor2_id = 0\n"
 "      @armor3_id = 0\n"
 "      @armor4_id = 0\n"
 "      @class_id = 1\n"
 "      @id = 0\n"
 "      @initial_level = 1\n"
 "      @name = \"\"\n"
 "      @weapon_id = 0\n"
 "      @armor1_fix = false\n"
 "      @armor2_fix = false\n"
 "      @armor3_fix = false\n"
 "      @armor4_fix = false\n"
 "      @battler_hue = 0\n"
 "      @battler_name = \"\"\n"
 "      @character_hue = 0\n"
 "      @character_name = \"\"\n"
 "      @exp_basis = 30\n"
 "      @exp_inflation = 30\n"
 "      @final_level = 99\n"
 "      @parameters = Table.new(6, 100)\n"
 "      (1..99).each do|level|\n"
 "        @parameters[0, level] = level * 50 + 500\n"
 "        @parameters[1, level] = level * 50 + 500\n"
 "        @parameters[2, level] = level * 5 + 50\n"
 "        @parameters[3, level] = level * 5 + 50\n"
 "        @parameters[4, level] = level * 5 + 50\n"
 "        @parameters[5, level] = level * 5 + 50\n"
 "      end\n"
 "      @weapon_fix = false\n"
 "    end\n"
 "  end\n"
 "  class Class\n"
 "    attr_accessor :armor_set, :element_ranks, :id, :learnings, :name, :position, :state_ranks, :weapon_set\n"
 "    def initialize\n"
 "      @armor_set = []\n"
 "      @element_ranks = Table.new(1)\n"
 "      @id = 0\n"
 "      @learnings = []\n"
 "      @name = \"\"\n"
 "      @position = 0\n"
 "      @state_ranks = Table.new(1)\n"
 "      @weapon_set = []\n"
 "    end\n"
 "    class Learning\n"
 "      attr_accessor :level, :skill_id\n"
 "      def initialize\n"
 "        @level = 1\n"
 "        @skill_id = 1\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class Skill\n"
 "    attr_accessor :agi_f, :animation1_id, :animation2_id, :atk_f, :common_event_id, :description, :dex_f, :element_set, :eva_f, :hit, :icon_name, :id, :int_f, :mdef_f, :menu_se, :minus_state_set, :name, :occasion, :pdef_f, :plus_state_set, :power, :scope, :sp_cost, :str_f, :variance\n"
 "    def initialize\n"
 "      @agi_f = 0\n"
 "      @animation1_id = 0\n"
 "      @animation2_id = 0\n"
 "      @atk_f = 0\n"
 "      @common_event_id = 0\n"
 "      @description = \"\"\n"
 "      @dex_f = 0\n"
 "      @element_set = []\n"
 "      @eva_f = 0\n"
 "      @hit = 100\n"
 "      @icon_name = \"\"\n"
 "      @id = 0\n"
 "      @int_f = 100\n"
 "      @mdef_f = 100\n"
 "      @menu_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @minus_state_set = []\n"
 "      @name = \"\"\n"
 "      @occasion = 1\n"
 "      @pdef_f = 0\n"
 "      @plus_state_set = []\n"
 "      @power = 0\n"
 "      @scope = 0\n"
 "      @sp_cost = 0\n"
 "      @str_f = 0\n"
 "      @variance = 15\n"
 "    end\n"
 "  end\n"
 "  class Item\n"
 "    attr_accessor :animation1_id, :animation2_id, :common_event_id, :consumable, :description, :element_set, :hit, :icon_name, :id, :mdef_f, :menu_se, :minus_state_set, :name, :occasion, :parameter_points, :parameter_type, :pdef_f, :plus_state_set, :price, :recover_hp, :recover_hp_rate, :recover_sp, :recover_sp_rate, :scope, :variance\n"
 "    def initialize\n"
 "      @animation1_id = 0\n"
 "      @animation2_id = 0\n"
 "      @common_event_id = 0\n"
 "      @consumable = true\n"
 "      @description = \"\"\n"
 "      @element_set = []\n"
 "      @hit = 100\n"
 "      @icon_name = \"\"\n"
 "      @id = 0\n"
 "      @mdef_f = 0\n"
 "      @menu_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @minus_state_set = []\n"
 "      @name = \"\"\n"
 "      @occasion = 0\n"
 "      @parameter_points = 0\n"
 "      @parameter_type = 0\n"
 "      @pdef_f = 0\n"
 "      @plus_state_set = []\n"
 "      @price = 0\n"
 "      @recover_hp = 0\n"
 "      @recover_hp_rate = 0\n"
 "      @recover_sp = 0\n"
 "      @recover_sp_rate = 0\n"
 "      @scope = 0\n"
 "      @variance = 0\n"
 "    end\n"
 "  end\n"
 "  class Weapon\n"
 "    attr_accessor :agi_plus, :animation1_id, :animation2_id, :atk, :description, :dex_plus, :element_set, :icon_name, :id, :int_plus, :mdef, :minus_state_set, :name, :pdef, :plus_state_set, :price, :str_plus\n"
 "    def initialize\n"
 "      @agi_plus = 0\n"
 "      @animation1_id = 0\n"
 "      @animation2_id = 0\n"
 "      @atk = 0\n"
 "      @description = \"\"\n"
 "      @dex_plus = 0\n"
 "      @element_set = []\n"
 "      @icon_name = \"\"\n"
 "      @id = 0\n"
 "      @int_plus = 0\n"
 "      @mdef = 0\n"
 "      @minus_state_set = []\n"
 "      @name = \"\"\n"
 "      @pdef = 0\n"
 "      @plus_state_set = []\n"
 "      @price = 0\n"
 "      @str_plus = 0\n"
 "    end\n"
 "  end\n"
 "  class Armor\n"
 "    attr_accessor :agi_plus, :auto_state_id, :description, :dex_plus, :eva, :guard_element_set, :guard_state_set, :icon_name, :id, :int_plus, :kind, :mdef, :name, :pdef, :price, :str_plus\n"
 "    def initialize\n"
 "      @agi_plus = 0\n"
 "      @auto_state_id = 0\n"
 "      @description = \"\"\n"
 "      @dex_plus = 0\n"
 "      @eva = 0\n"
 "      @guard_element_set = []\n"
 "      @guard_state_set = []\n"
 "      @icon_name = \"\"\n"
 "      @id = 0\n"
 "      @int_plus = 0\n"
 "      @kind = 0\n"
 "      @mdef = 0\n"
 "      @name = \"\"\n"
 "      @pdef = 0\n"
 "      @price = 0\n"
 "      @str_plus = 0\n"
 "    end\n"
 "  end\n"
 "  class Enemy\n"
 "    attr_accessor :actions, :agi, :animation1_id, :animation2_id, :armor_id, :atk, :battler_hue, :battler_name, :dex, :element_ranks, :eva, :exp, :gold, :id, :int, :item_id, :maxhp, :maxsp, :mdef, :name, :pdef, :state_ranks, :str, :treasure_prob, :weapon_id\n"
 "    def initialize\n"
 "      @actions = [RPG::Enemy::Action.new]\n"
 "      @agi = 50\n"
 "      @animation1_id = 0\n"
 "      @animation2_id = 0\n"
 "      @armor_id = 0\n"
 "      @atk = 100\n"
 "      @battler_hue = 0\n"
 "      @battler_name = \"\"\n"
 "      @dex = 50\n"
 "      @element_ranks = Table.new(1)\n"
 "      @eva = 0\n"
 "      @exp = 0\n"
 "      @gold = 0\n"
 "      @id = 0\n"
 "      @int = 50\n"
 "      @item_id = 0\n"
 "      @maxhp = 500\n"
 "      @maxsp = 500\n"
 "      @mdef = 100\n"
 "      @name = \"\"\n"
 "      @pdef = 100\n"
 "      @state_ranks = Table.new(1)\n"
 "      @str = 50\n"
 "      @treasure_prob = 100\n"
 "      @weapon_id = 0\n"
 "    end\n"
 "    class Action\n"
 "      attr_accessor :basic, :condition_hp, :condition_level, :condition_switch_id, :condition_turn_a, :condition_turn_b, :kind, :rating, :skill_id\n"
 "      def initialize\n"
 "        @basic = 0\n"
 "        @condition_hp = 100\n"
 "        @condition_level = 1\n"
 "        @condition_switch_id = 0\n"
 "        @condition_turn_a = 0\n"
 "        @condition_turn_b = 1\n"
 "        @kind = 0\n"
 "        @rating = 5\n"
 "        @skill_id = 1\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class State\n"
 "    attr_accessor :agi_rate, :animation_id, :atk_rate, :auto_release_prob, :battle_only, :cant_evade, :cant_get_exp, :dex_rate, :eva, :guard_element_set, :hit_rate, :hold_turn, :id, :int_rate, :maxhp_rate, :maxsp_rate, :mdef_rate, :minus_state_set, :name, :nonresistance, :pdef_rate, :plus_state_set, :rating, :restriction, :shock_release_prob, :slip_damage, :str_rate, :zero_hp\n"
 "    def initialize\n"
 "      @agi_rate = 100\n"
 "      @animation_id = 0\n"
 "      @atk_rate = 100\n"
 "      @auto_release_prob = 0\n"
 "      @battle_only = true\n"
 "      @cant_evade = false\n"
 "      @cant_get_exp = false\n"
 "      @dex_rate = 100\n"
 "      @eva = 0\n"
 "      @guard_element_set = []\n"
 "      @hit_rate = 100\n"
 "      @hold_turn = 0\n"
 "      @id = 0\n"
 "      @int_rate = 100\n"
 "      @maxhp_rate = 100\n"
 "      @maxsp_rate = 100\n"
 "      @mdef_rate = 100\n"
 "      @minus_state_set = []\n"
 "      @name = \"\"\n"
 "      @nonresistance = false\n"
 "      @pdef_rate = 100\n"
 "      @plus_state_set = []\n"
 "      @rating = 5\n"
 "      @restriction = 0\n"
 "      @shock_release_prob = 0\n"
 "      @slip_damage = false\n"
 "      @str_rate = 100\n"
 "      @zero_hp = false\n"
 "    end\n"
 "  end\n"
 "  class Troop\n"
 "    attr_accessor :id, :name, :members, :pages\n"
 "    def initialize\n"
 "      @id = 0\n"
 "      @members = []\n"
 "      @name = \"\"\n"
 "      @pages = [RPG::Troop::Page.new]\n"
 "    end\n"
 "    class Member\n"
 "      attr_accessor :enemy_id, :hidden, :x, :y\n"
 "      attr_accessor :immortal\n"
 "      def initialize\n"
 "        @enemy_id = 1\n"
 "        @hidden = false\n"
 "        @x = 0\n"
 "        @y = 0\n"
 "        @immortal = false\n"
 "      end\n"
 "    end\n"
 "    class Page\n"
 "      attr_accessor :condition, :list, :span\n"
 "      def initialize\n"
 "        @condition = RPG::Troop::Page::Condition.new\n"
 "        @list = [RPG::EventCommand.new]\n"
 "        @span = 0\n"
 "      end\n"
 "      class Condition\n"
 "        attr_accessor :actor_hp, :actor_id, :actor_valid, :enemy_hp, :enemy_index, :enemy_valid, :switch_id, :switch_valid, :turn_a, :turn_b, :turn_valid\n"
 "        def initialize\n"
 "          @actor_hp = 50\n"
 "          @actor_id = 1\n"
 "          @actor_valid = false\n"
 "          @enemy_hp = 50\n"
 "          @enemy_index = 0\n"
 "          @enemy_valid = false\n"
 "          @switch_id = 1\n"
 "          @switch_valid = false\n"
 "          @turn_a = 0\n"
 "          @turn_b = 0\n"
 "          @turn_valid = false\n"
 "        end\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class Animation\n"
 "    attr_accessor :frame_max, :frames, :id, :name, :position, :timings\n"
 "    attr_accessor :animation_hue, :animation_name\n"
 "    def initialize\n"
 "      @animation_hue = 0\n"
 "      @animation_name = \"\"\n"
 "      @frame_max = 1\n"
 "      @frames = [RPG::Animation::Frame.new]\n"
 "      @id = 0\n"
 "      @name = \"\"\n"
 "      @position = 1\n"
 "      @timings = []\n"
 "    end\n"
 "    class Frame\n"
 "      attr_accessor :cell_data, :cell_max\n"
 "      def initialize\n"
 "        @cell_data = Table.new(0, 0)\n"
 "        @cell_max = 0\n"
 "      end\n"
 "    end\n"
 "    class Timing\n"
 "      attr_accessor :flash_color, :flash_duration, :flash_scope, :frame, :se\n"
 "      attr_accessor :condition\n"
 "      def initialize\n"
 "        @flash_color = Color.new(255, 255, 255, 255)\n"
 "        @flash_duration = 5\n"
 "        @flash_scope = 0\n"
 "        @frame = 0\n"
 "        @se = RPG::AudioFile.new(\"\", 80)\n"
 "        @condition = 0\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class Tileset\n"
 "    attr_accessor :autotile_names, :battleback_name, :fog_blend_type, :fog_hue, :fog_name, :fog_opacity, :fog_sx, :fog_sy, :fog_zoom, :id, :name, :panorama_hue, :panorama_name, :passages, :priorities, :terrain_tags, :tileset_name\n"
 "    def initialize\n"
 "      @autotile_names = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"]\n"
 "      @battleback_name = \"\"\n"
 "      @fog_blend_type = 0\n"
 "      @fog_hue = 0\n"
 "      @fog_name = \"\"\n"
 "      @fog_opacity = 64\n"
 "      @fog_sx = 0\n"
 "      @fog_sy = 0\n"
 "      @fog_zoom = 200\n"
 "      @id = 0\n"
 "      @name = \"\"\n"
 "      @panorama_hue = 0\n"
 "      @panorama_name = \"\"\n"
 "      @passages = Table.new(384)\n"
 "      @priorities = Table.new(384)\n"
 "      @priorities[0] = 5\n"
 "      @terrain_tags = Table.new(384)\n"
 "      @tileset_name = \"\"\n"
 "    end\n"
 "  end\n"
 "  class CommonEvent\n"
 "    attr_accessor :id, :name, :trigger, :switch_id, :list\n"
 "    def initialize\n"
 "      @id = 0\n"
 "      @list = [RPG::EventCommand.new]\n"
 "      @name = \"\"\n"
 "      @switch_id = 1\n"
 "      @trigger = 0\n"
 "    end\n"
 "  end\n"
 "  class System\n"
 "    attr_accessor :battle_bgm, :battle_end_me, :battler_hue, :battler_name, :edit_map_id, :elements, :gameover_me, :party_members, :start_map_id, :start_x, :start_y, :switches, :test_battlers, :test_troop_id, :title_bgm, :variables\n"
 "    attr_accessor :actor_collapse_se, :battle_start_se, :battle_transition, :battleback_name, :buzzer_se, :cancel_se, :cursor_se, :decision_se, :enemy_collapse_se, :equip_se, :escape_se, :gameover_name, :load_se, :magic_number, :save_se, :shop_se, :title_name, :windowskin_name, :words\n"
 "    def initialize\n"
 "      @actor_collapse_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @battle_bgm = RPG::AudioFile.new\n"
 "      @battle_end_me = RPG::AudioFile.new\n"
 "      @battle_start_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @battle_transition = \"\"\n"
 "      @battleback_name = \"\"\n"
 "      @battler_hue = 0\n"
 "      @battler_name = \"\"\n"
 "      @buzzer_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @cancel_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @cursor_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @decision_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @edit_map_id = 1\n"
 "      @elements = [nil, \"\"]\n"
 "      @enemy_collapse_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @equip_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @escape_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @gameover_me = RPG::AudioFile.new\n"
 "      @gameover_name = \"\"\n"
 "      @load_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @magic_number = 0\n"
 "      @party_members = [1]\n"
 "      @save_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @shop_se = RPG::AudioFile.new(\"\", 80)\n"
 "      @start_map_id = 1\n"
 "      @start_x = 0\n"
 "      @start_y = 0\n"
 "      @switches = [nil, \"\"]\n"
 "      @test_battlers = []\n"
 "      @test_troop_id = 1\n"
 "      @title_bgm = RPG::AudioFile.new\n"
 "      @title_name = \"\"\n"
 "      @variables = [nil, \"\"]\n"
 "      @windowskin_name = \"\"\n"
 "      @words = RPG::System::Words.new\n"
 "    end\n"
 "    class Words\n"
 "      attr_accessor :agi, :armor1, :armor2, :armor3, :armor4, :atk, :attack, :equip, :gold, :guard, :hp, :item, :skill, :weapon\n"
 "      attr_accessor :dex, :int, :mdef, :pdef, :sp, :str\n"
 "      def initialize\n"
 "        @agi = \"\"\n"
 "        @armor1 = \"\"\n"
 "        @armor2 = \"\"\n"
 "        @armor3 = \"\"\n"
 "        @armor4 = \"\"\n"
 "        @atk = \"\"\n"
 "        @attack = \"\"\n"
 "        @dex = \"\"\n"
 "        @equip = \"\"\n"
 "        @gold = \"\"\n"
 "        @guard = \"\"\n"
 "        @hp = \"\"\n"
 "        @int = \"\"\n"
 "        @item = \"\"\n"
 "        @mdef = \"\"\n"
 "        @pdef = \"\"\n"
 "        @skill = \"\"\n"
 "        @sp = \"\"\n"
 "        @str = \"\"\n"
 "        @weapon = \"\"\n"
 "      end\n"
 "    end\n"
 "    class TestBattler\n"
 "      attr_accessor :actor_id, :level\n"
 "      attr_accessor :armor1_id, :armor2_id, :armor3_id, :armor4_id, :weapon_id\n"
 "      def initialize\n"
 "        @actor_id = 1\n"
 "        @level = 1\n"
 "        @armor1_id = 0\n"
 "        @armor2_id = 0\n"
 "        @armor3_id = 0\n"
 "        @armor4_id = 0\n"
 "        @weapon_id = 0\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class AudioFile\n"
 "    attr_accessor :name, :pitch, :volume\n"
 "    def initialize(name = \"\", volume = 100, pitch = 100)\n"
 "      @name = name\n"
 "      @pitch = pitch\n"
 "      @volume = volume\n"
 "    end\n"
 "  end\n"
 "  module Cache\n"
 "    @cache = {}\n"
 "    def self.load_bitmap(dir, name, hue=0)\n"
 "      path = dir + name\n"
 "      key = hue == 0 ? path : [path, hue]\n"
 "      if !@cache[key] || @cache[key].disposed?\n"
 "        if name == \"\"\n"
 "          @cache[key] = Bitmap.new(32, 32)\n"
 "        else\n"
 "          @cache[key] = Bitmap.new(key)\n"
 "          @cache[key].hue_change(hue)\n"
 "        end\n"
 "      end\n"
 "      @cache[key]\n"
 "    end\n"
 "    def self.animation(name, hue)\n"
 "      load_bitmap(\"Graphics/Animations/\", name, hue)\n"
 "    end\n"
 "    def self.autotile(name)\n"
 "      load_bitmap(\"Graphics/Autotiles/\", name)\n"
 "    end\n"
 "    def self.battleback(name)\n"
 "      load_bitmap(\"Graphics/Battlebacks/\", name)\n"
 "    end\n"
 "    def self.battler(name, hue)\n"
 "      load_bitmap(\"Graphics/Battlers/\", name, hue)\n"
 "    end\n"
 "    def self.character(name, hue)\n"
 "      load_bitmap(\"Graphics/Characters/\", name, hue)\n"
 "    end\n"
 "    def self.fog(name, hue)\n"
 "      load_bitmap(\"Graphics/Fogs/\", name, hue)\n"
 "    end\n"
 "    def self.gameover(name)\n"
 "      load_bitmap(\"Graphics/Gameovers/\", name)\n"
 "    end\n"
 "    def self.icon(name)\n"
 "      load_bitmap(\"Graphics/Icons/\", name)\n"
 "    end\n"
 "    def self.panorama(name, hue)\n"
 "      load_bitmap(\"Graphics/Panoramas/\", name, hue)\n"
 "    end\n"
 "    def self.picture(name)\n"
 "      load_bitmap(\"Graphics/Pictures/\", name)\n"
 "    end\n"
 "    def self.tileset(name)\n"
 "      load_bitmap(\"Graphics/Tilesets/\", name)\n"
 "    end\n"
 "    def self.title(name)\n"
 "      load_bitmap(\"Graphics/Titles/\", name)\n"
 "    end\n"
 "    def self.transition(name)\n"
 "      load_bitmap(\"Graphics/Transitions/\", name)\n"
 "    end\n"
 "    def self.windowskin(name)\n"
 "      load_bitmap(\"Graphics/Windowskins/\", name)\n"
 "    end\n"
 "  end\n"
 "  class Sprite < ::Sprite\n"
 "    @@_animations = []\n"
 "    @@_reference_count = {}\n"
 "    def whiten\n"
 "      self.opacity = 255\n"
 "      self.blend_type = 0\n"
 "      self.color = Color.new(255.0, 255.0, 255.0, 128.0)\n"
 "      @_appear_duration = 0\n"
 "      @_collapse_duration = 0\n"
 "      @_escape_duration = 0\n"
 "      @_whiten_duration = 16\n"
 "    end\n"
 "    def appear\n"
 "      self.opacity = 0\n"
 "      self.blend_type = 0\n"
 "      self.color = Color.new(0.0, 0.0, 0.0, 0.0)\n"
 "      @_appear_duration = 16\n"
 "      @_collapse_duration = 0\n"
 "      @_escape_duration = 0\n"
 "      @_whiten_duration = 0\n"
 "    end\n"
 "    def escape\n"
 "      self.opacity = 255\n"
 "      self.blend_type = 0\n"
 "      self.color = Color.new(0.0, 0.0, 0.0, 0.0)\n"
 "      @_appear_duration = 0\n"
 "      @_collapse_duration = 0\n"
 "      @_escape_duration = 32\n"
 "      @_whiten_duration = 0\n"
 "    end\n"
 "    def collapse\n"
 "      self.opacity = 255\n"
 "      self.blend_type = 1\n"
 "      self.color = Color.new(255.0, 64.0, 64.0, 255.0)\n"
 "      @_appear_duration = 0\n"
 "      @_collapse_duration = 48\n"
 "      @_escape_duration = 0\n"
 "      @_whiten_duration = 0\n"
 "    end\n"
 "    def damage(value, critical)\n"
 "      warn_unimplemented(\"RPG::Sprite#damage\")\n"
 "    end\n"
 "    def animation(animation, hit)\n"
 "      warn_unimplemented(\"RPG::Sprite#animation\")\n"
 "    end\n"
 "    def loop_animation(animation)\n"
 "      warn_unimplemented(\"RPG::Sprite#loop_animation\")\n"
 "    end\n"
 "    def blink_on\n"
 "      @_blink = true\n"
 "    end\n"
 "    def blink_off\n"
 "      @_blink = false\n"
 "      self.color = Color.new(0.0, 0.0, 0.0, 0.0)\n"
 "    end\n"
 "    def blink?\n"
 "      @_blink\n"
 "    end\n"
 "    def effect?\n"
 "      @_animation_duration > 0 || @_appear_duration > 0 || @_collapse_duration > 0 || @_damage_duration > 0 || @_escape_duration > 0 || @_whiten_duration > 0\n"
 "    end\n"
 "    def update\n"
 "      warn_unimplemented(\"RPG::Sprite#update\")\n"
 "    end\n"
 "    def initialize(viewport = nil)\n"
 "      super(viewport)\n"
 "      @_animation_duration = 0\n"
 "      @_appear_duration = 0\n"
 "      @_blink = false\n"
 "      @_collapse_duration = 0\n"
 "      @_damage_duration = 0\n"
 "      @_escape_duration = 0\n"
 "      @_whiten_duration = 0\n"
 "    end\n"
 "  end\n"
 "  class Weather\n"
 "    attr_accessor :max, :ox, :oy, :type\n"
 "    def initialize(viewport=nil)\n"
 "      warn_unimplemented(\"RPG::Weather.new\")\n"
 "    end\n"
 "    def update\n"
 "      warn_unimplemented(\"RPG::Weather#update\")\n"
 "    end\n"
 "    def dispose\n"
 "      warn_unimplemented(\"RPG::Weather#dispose\")\n"
 "    end\n"
 "  end\n"
 "end\n"
 "\n"
// TODO: implement fake DL and Win32API
 "class Hangup < Exception\n"
 "end\n"
 "\n"
 "def save_data(obj, filename)\n"
 "  File.open(filename.gsub(/\\\\/, \"/\"), \"wb\") do|f|\n"
 "    Marshal.dump(obj, f)\n"
 "  end\n"
 "end\n"
;
