static const char *rgss2_exe =
 "$KCODE = \"u\"\n"
/* TODO: this is only for developing purpose. */
      /* We want to remove it when it becomes unnecessary. */
 "def warn_unimplemented(name)\n"
 "  unimplemented_warnings = eval(\"$unimplemented_warnings ||= {}\")\n"
 "  if !unimplemented_warnings[name]\n"
 "    unimplemented_warnings[name] = true\n"
#ifdef __DEBUG__
 "    $stderr.puts \"unimplemented: #{name}\"\n"
#endif
 "  end\n"
 "end\n"
 "class Font\n"
 "  @@default_name = [\"UmePlus Gothic\", \"ＭＳ ゴシック\", \"Courier New\"] \n"
 "  @@default_size = 20\n"
 "  @@default_bold = false\n"
 "  @@default_italic = false\n"
 "  @@default_shadow = true\n"
 "  @@default_color = Color.new(255, 255, 255, 255)\n"
 "  def self.default_name\n"
 "    @@default_name\n"
 "  end\n"
 "  def self.default_name=(default_name)\n"
 "    @@default_name = default_name\n"
 "  end\n"
 "  def self.default_size\n"
 "    @@default_size\n"
 "  end\n"
 "  def self.default_size=(default_size)\n"
 "    @@default_size = default_size\n"
 "  end\n"
 "  def self.default_bold\n"
 "    @@default_bold\n"
 "  end\n"
 "  def self.default_bold=(default_bold)\n"
 "    @@default_bold = default_bold\n"
 "  end\n"
 "  def self.default_italic\n"
 "    @@default_italic\n"
 "  end\n"
 "  def self.default_italic=(default_italic)\n"
 "    @@default_italic = default_italic\n"
 "  end\n"
 "  def self.default_shadow\n"
 "    @@default_shadow\n"
 "  end\n"
 "  def self.default_shadow=(default_shadow)\n"
 "    @@default_shadow = default_shadow\n"
 "  end\n"
 "  def self.default_color\n"
 "    @@default_color\n"
 "  end\n"
 "  def self.default_color=(default_color)\n"
 "    @@default_color = default_color\n"
 "  end\n"
 "end\n"
 "\n"
 "module RPG\n"
 "  class Map\n"
 "    attr_accessor :autoplay_bgm, :autoplay_bgs, :bgm, :bgs, :data, :encounter_list, :encounter_step, :events, :height, :width\n"
 "    attr_accessor :disable_dashing, :parallax_loop_x, :parallax_loop_y, :parallax_name, :parallax_show, :parallax_sx, :parallax_sy, :scroll_type\n"
 "    def initialize(width, height)\n"
 "      @autoplay_bgm = false\n"
 "      @autoplay_bgs = false\n"
 "      @encounter_list = []\n"
 "      @encounter_step = 30\n"
 "      @events = {}\n"
 "      @height = height\n"
 "      @width = width\n"
 "      @bgm = RPG::BGM.new\n"
 "      @bgs = RPG::BGS.new(\"\", 80)\n"
 "      @disable_dashing = false\n"
 "      @parallax_loop_x = false\n"
 "      @parallax_loop_y = false\n"
 "      @parallax_name = \"\"\n"
 "      @parallax_show = false\n"
 "      @parallax_sx = 0\n"
 "      @parallax_sy = 0\n"
 "      @scroll_type = 0\n"
 "      @data = Table.new(width, height, 3)\n"
 "    end\n"
 "  end\n"
 "  class MapInfo\n"
 "    attr_accessor :expanded, :name, :order, :parent_id, :scroll_x, :scroll_y\n"
 "    def initialize\n"
 "      @expanded = false\n"
 "      @name = \"\"\n"
 "      @order = 0\n"
 "      @parent_id = 0\n"
 "      @scroll_x = 0\n"
 "      @scroll_y = 0\n"
 "    end\n"
 "  end\n"
 "  class Area\n"
 "    attr_accessor :encounter_list, :id, :map_id, :name, :order, :rect\n"
 "    def initialize\n"
 "      @encounter_list = []\n"
 "      @id = 0\n"
 "      @map_id = 0\n"
 "      @name = \"\"\n"
 "      @order = 0\n"
 "      @rect = Rect.new(0, 0, 0, 0)\n"
 "    end\n"
 "  end\n"
 "  class Event\n"
 "    attr_accessor :id, :name, :pages, :x, :y\n"
 "    def initialize(x, y)\n"
 "      @id = 0\n"
 "      @name = \"\"\n"
 "      @pages = [RPG::Event::Page.new]\n"
 "      @x = x\n"
 "      @y = y\n"
 "    end\n"
 "    class Page\n"
 "      attr_accessor :condition, :direction_fix, :graphic, :list, :move_frequency, :move_route, :move_speed, :move_type, :step_anime, :through, :trigger, :walk_anime\n"
 "      attr_accessor :priority_type\n"
 "      def initialize\n"
 "        @condition = RPG::Event::Page::Condition.new\n"
 "        @direction_fix = false\n"
 "        @graphic = RPG::Event::Page::Graphic.new\n"
 "        @list = [RPG::EventCommand.new]\n"
 "        @move_frequency = 3\n"
 "        @move_route = RPG::MoveRoute.new\n"
 "        @move_speed = 3\n"
 "        @move_type = 0\n"
 "        @step_anime = false\n"
 "        @through = false\n"
 "        @trigger = 0\n"
 "        @walk_anime = true\n"
 "        @priority_type = 0\n"
 "      end\n"
 "      class Condition\n"
 "        attr_accessor :self_switch_ch, :self_switch_valid, :switch1_id, :switch1_valid, :switch2_id, :switch2_valid, :variable_id, :variable_valid, :variable_value\n"
 "        attr_accessor :actor_id, :actor_valid, :item_id, :item_valid\n"
 "        def initialize\n"
 "          @self_switch_ch = \"A\"\n"
 "          @self_switch_valid = false\n"
 "          @switch1_id = 1\n"
 "          @switch1_valid = false\n"
 "          @switch2_id = 1\n"
 "          @switch2_valid = false\n"
 "          @variable_id = 1\n"
 "          @variable_valid = false\n"
 "          @variable_value = 0\n"
 "          @actor_id = 1\n"
 "          @actor_valid = false\n"
 "          @item_id = 1\n"
 "          @item_valid = false\n"
 "        end\n"
 "      end\n"
 "      class Graphic\n"
 "        attr_accessor :character_name, :direction, :pattern, :tile_id\n"
 "        attr_accessor :character_index\n"
 "        def initialize\n"
 "          @character_name = \"\"\n"
 "          @direction = 2\n"
 "          @pattern = 0\n"
 "          @tile_id = 0\n"
 "          @character_index = 0\n"
 "        end\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class EventCommand\n"
 "    attr_accessor :code, :indent, :parameters\n"
 "    def initialize(code = 0, indent = 0, parameters = [])\n"
 "      @code = code\n"
 "      @indent = indent\n"
 "      @parameters = parameters\n"
 "    end\n"
 "  end\n"
 "  class MoveRoute\n"
 "    attr_accessor :list, :repeat, :skippable\n"
 "    attr_accessor :wait\n"
 "    def initialize\n"
 "      @list = [RPG::MoveCommand.new]\n"
 "      @repeat = true\n"
 "      @skippable = false\n"
 "      @wait = false\n"
 "    end\n"
 "  end\n"
 "  class MoveCommand\n"
 "    attr_accessor :code, :parameters\n"
 "    def initialize(code = 0, parameters = [])\n"
 "      @code = code\n"
 "      @parameters = parameters\n"
 "    end\n"
 "  end\n"
 "  class BaseItem\n"
 "    attr_accessor :description, :icon_index, :id, :name, :note\n"
 "    def initialize\n"
 "      @description = \"\"\n"
 "      @icon_index = 0\n"
 "      @id = 0\n"
 "      @name = \"\"\n"
 "      @note = \"\"\n"
 "    end\n"
 "  end\n"
 "  class Actor\n"
 "    attr_accessor :armor1_id, :armor2_id, :armor3_id, :armor4_id, :class_id, :exp_basis, :exp_inflation, :id, :initial_level, :name, :parameters, :weapon_id\n"
 "    attr_accessor :auto_battle, :character_index, :character_name, :critical_bonus, :face_index, :face_name, :fix_equipment, :pharmacology, :super_guard, :two_swords_style\n"
 "    def initialize\n"
 "      @armor1_id = 0\n"
 "      @armor2_id = 0\n"
 "      @armor3_id = 0\n"
 "      @armor4_id = 0\n"
 "      @class_id = 1\n"
 "      @id = 0\n"
 "      @initial_level = 1\n"
 "      @name = \"\"\n"
 "      @weapon_id = 0\n"
 "      @auto_battle = false\n"
 "      @character_index = 0\n"
 "      @character_name = \"\"\n"
 "      @critical_bonus = false\n"
 "      @exp_basis = 25\n"
 "      @exp_inflation = 35\n"
 "      @face_index = 0\n"
 "      @face_name = \"\"\n"
 "      @fix_equipment = false\n"
 "      @parameters = Table.new(6, 100)\n"
 "      (1..99).each do|level|\n"
 "        @parameters[0, level] = level * 50 + 400\n"
 "        @parameters[1, level] = level * 10 + 80\n"
 "        @parameters[2, level] = (level * 5 + 60) / 4\n"
 "        @parameters[3, level] = (level * 5 + 60) / 4\n"
 "        @parameters[4, level] = (level * 5 + 40) / 2\n"
 "        @parameters[5, level] = (level * 5 + 40) / 2\n"
 "      end\n"
 "      @pharmacology = false\n"
 "      @super_guard = false\n"
 "      @two_swords_style = false\n"
 "    end\n"
 "  end\n"
 "  class Class\n"
 "    attr_accessor :armor_set, :element_ranks, :id, :learnings, :name, :position, :state_ranks, :weapon_set\n"
 "    attr_accessor :skill_name, :skill_name_valid\n"
 "    def initialize\n"
 "      @armor_set = []\n"
 "      @element_ranks = Table.new(1)\n"
 "      @id = 0\n"
 "      @learnings = []\n"
 "      @name = \"\"\n"
 "      @position = 0\n"
 "      @state_ranks = Table.new(1)\n"
 "      @weapon_set = []\n"
 "      @skill_name = \"\"\n"
 "      @skill_name_valid = false\n"
 "    end\n"
 "    class Learning\n"
 "      attr_accessor :level, :skill_id\n"
 "      def initialize\n"
 "        @level = 1\n"
 "        @skill_id = 1\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class UsableItem < BaseItem\n"
 "    attr_accessor :absorb_damage, :animation_id, :atk_f, :base_damage, :common_event_id, :damage_to_mp, :element_set, :ignore_defense, :minus_state_set, :occasion, :physical_attack, :plus_state_set, :scope, :speed, :spi_f, :variance\n"
 "    def initialize\n"
 "      super\n"
 "      @absorb_damage = false\n"
 "      @animation_id = 0\n"
 "      @atk_f = 0\n"
 "      @base_damage = 0\n"
 "      @common_event_id = 0\n"
 "      @damage_to_mp = false\n"
 "      @element_set = []\n"
 "      @ignore_defense = false\n"
 "      @minus_state_set = []\n"
 "      @occasion = 0\n"
 "      @physical_attack = false\n"
 "      @plus_state_set = []\n"
 "      @scope = 0\n"
 "      @speed = 0\n"
 "      @spi_f = 0\n"
 "      @variance = 20\n"
 "    end\n"
 "    def for_opponent?\n"
 "      [1, 2, 3, 4, 5, 6].include?(@scope)\n"
 "    end\n"
 "    def for_friend?\n"
 "      [7, 8, 9, 10, 11].include?(@scope)\n"
 "    end\n"
 "    def for_dead_friend?\n"
 "      [9, 10].include?(@scope)\n"
 "    end\n"
 "    def for_user?\n"
 "      @scope == 11\n"
 "    end\n"
 "    def for_one?\n"
 "      [1, 3, 4, 7, 9, 11].include?(@scope)\n"
 "    end\n"
 "    def for_two?\n"
 "      @scope == 5\n"
 "    end\n"
 "    def for_three?\n"
 "      @scope == 6\n"
 "    end\n"
 "    def for_random?\n"
 "      [4, 5, 6].include?(@scope)\n"
 "    end\n"
 "    def for_all?\n"
 "      [2, 8, 10].include?(@scope)\n"
 "    end\n"
 "    def dual?\n"
 "      @scope == 3\n"
 "    end\n"
 "    def need_selection?\n"
 "      [1, 3, 7, 9].include?(@scope)\n"
 "    end\n"
 "    def battle_ok?\n"
 "      [0, 1].include?(@occasion)\n"
 "    end\n"
 "    def menu_ok?\n"
 "      [0, 2].include?(@occasion)\n"
 "    end\n"
 "  end\n"
 "  class Skill < UsableItem\n"
 "    attr_accessor :hit, :message1, :message2, :mp_cost\n"
 "    def initialize\n"
 "      super\n"
 "      @hit = 100\n"
 "      @message1 = \"\"\n"
 "      @message2 = \"\"\n"
 "      @mp_cost = 0\n"
 "      @scope = 1\n"
 "    end\n"
 "  end\n"
 "  class Item < UsableItem\n"
 "    attr_accessor :consumable, :hp_recovery, :hp_recovery_rate, :mp_recovery, :mp_recovery_rate, :parameter_points, :parameter_type, :price\n"
 "    def initialize\n"
 "      super\n"
 "      @consumable = true\n"
 "      @hp_recovery = 0\n"
 "      @hp_recovery_rate = 0\n"
 "      @mp_recovery = 0\n"
 "      @mp_recovery_rate = 0\n"
 "      @parameter_points = 0\n"
 "      @parameter_type = 0\n"
 "      @price = 0\n"
 "      @scope = 7\n"
 "    end\n"
 "  end\n"
 "  class Weapon < BaseItem\n"
 "    attr_accessor :agi, :animation_id, :atk, :critical_bonus, :def, :dual_attack, :element_set, :fast_attack, :hit, :price, :spi, :state_set, :two_handed\n"
 "    def initialize\n"
 "      super\n"
 "      @agi = 0\n"
 "      @animation_id = 0\n"
 "      @atk = 0\n"
 "      @critical_bonus = false\n"
 "      @def = 0\n"
 "      @dual_attack = false\n"
 "      @element_set = []\n"
 "      @fast_attack = false\n"
 "      @hit = 95\n"
 "      @price = 0\n"
 "      @spi = 0\n"
 "      @state_set = []\n"
 "      @two_handed = false\n"
 "    end\n"
 "  end\n"
 "  class Armor < BaseItem\n"
 "    attr_accessor :agi, :atk, :auto_hp_recover, :def, :double_exp_gain, :element_set, :eva, :half_mp_cost, :kind, :prevent_critical, :price, :spi, :state_set\n"
 "    def initialize\n"
 "      super\n"
 "      @agi = 0\n"
 "      @atk = 0\n"
 "      @auto_hp_recover = false\n"
 "      @def = 0\n"
 "      @double_exp_gain = false\n"
 "      @element_set = []\n"
 "      @eva = 0\n"
 "      @half_mp_cost = false\n"
 "      @kind = 0\n"
 "      @prevent_critical = false\n"
 "      @price = 0\n"
 "      @spi = 0\n"
 "      @state_set = []\n"
 "    end\n"
 "  end\n"
 "  class Enemy\n"
 "    attr_accessor :actions, :agi, :atk, :battler_hue, :battler_name, :def, :drop_item1, :drop_item2, :element_ranks, :eva, :exp, :gold, :has_critical, :hit, :id, :levitate, :maxhp, :maxmp, :name, :note, :spi, :state_ranks\n"
 "    def initialize\n"
 "      @actions = [RPG::Enemy::Action.new]\n"
 "      @agi = 10\n"
 "      @atk = 10\n"
 "      @battler_hue = 0\n"
 "      @battler_name = \"\"\n"
 "      @def = 10\n"
 "      @drop_item1 = RPG::Enemy::DropItem.new\n"
 "      @drop_item2 = RPG::Enemy::DropItem.new\n"
 "      @element_ranks = Table.new(1)\n"
 "      @eva = 5\n"
 "      @exp = 0\n"
 "      @gold = 0\n"
 "      @has_critical = false\n"
 "      @hit = 95\n"
 "      @id = 0\n"
 "      @levitate = false\n"
 "      @maxhp = 10\n"
 "      @maxmp = 10\n"
 "      @name = \"\"\n"
 "      @note = \"\"\n"
 "      @spi = 10\n"
 "      @state_ranks = Table.new(1)\n"
 "    end\n"
 "    class Action\n"
 "      attr_accessor :basic, :condition_param1, :condition_param2, :condition_type, :kind, :rating, :skill_id\n"
 "      def skill?\n"
 "        @kind == 1\n"
 "      end\n"
 "      def initialize\n"
 "        @basic = 0\n"
 "        @condition_param1 = 0\n"
 "        @condition_param2 = 0\n"
 "        @condition_type = 0\n"
 "        @kind = 0\n"
 "        @rating = 5\n"
 "        @skill_id = 1\n"
 "      end\n"
 "    end\n"
 "    class DropItem\n"
 "      attr_accessor :armor_id, :denominator, :item_id, :kind, :weapon_id\n"
 "      def initialize\n"
 "        @armor_id = 1\n"
 "        @denominator = 1\n"
 "        @item_id = 1\n"
 "        @kind = 0\n"
 "        @weapon_id = 1\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class State\n"
 "    attr_accessor :id, :name, :icon_index, :restriction, :priority, :atk_rate, :def_rate, :spi_rate, :agi_rate, :nonresistance, :offset_by_opposite, :slip_damage, :reduce_hit_ratio, :battle_only, :release_by_damage, :hold_turn, :auto_release_prob, :message1, :message2, :message3, :message4, :element_set, :state_set, :note\n"
 "    def initialize\n"
 "      @agi_rate = 100\n"
 "      @atk_rate = 100\n"
 "      @auto_release_prob = 0\n"
 "      @battle_only = true\n"
 "      @def_rate = 100\n"
 "      @element_set = []\n"
 "      @hold_turn = 0\n"
 "      @icon_index = 0\n"
 "      @id = 0\n"
 "      @message1 = \"\"\n"
 "      @message2 = \"\"\n"
 "      @message3 = \"\"\n"
 "      @message4 = \"\"\n"
 "      @name = \"\"\n"
 "      @nonresistance = false\n"
 "      @note = \"\"\n"
 "      @offset_by_opposite = false\n"
 "      @priority = 5\n"
 "      @reduce_hit_ratio = false\n"
 "      @release_by_damage = false\n"
 "      @restriction = 0\n"
 "      @slip_damage = false\n"
 "      @spi_rate = 100\n"
 "      @state_set = []\n"
 "    end\n"
 "  end\n"
 "  class Troop\n"
 "    attr_accessor :id, :name, :members, :pages\n"
 "    def initialize\n"
 "      @id = 0\n"
 "      @members = []\n"
 "      @name = \"\"\n"
 "      @pages = [RPG::Troop::Page.new]\n"
 "    end\n"
 "    class Member\n"
 "      attr_accessor :enemy_id, :hidden, :x, :y\n"
 "      attr_accessor :immortal\n"
 "      def initialize\n"
 "        @enemy_id = 1\n"
 "        @hidden = false\n"
 "        @x = 0\n"
 "        @y = 0\n"
 "        @immortal = false\n"
 "      end\n"
 "    end\n"
 "    class Page\n"
 "      attr_accessor :condition, :list, :span\n"
 "      def initialize\n"
 "        @condition = RPG::Troop::Page::Condition.new\n"
 "        @list = [RPG::EventCommand.new]\n"
 "        @span = 0\n"
 "      end\n"
 "      class Condition\n"
 "        attr_accessor :turn_ending\n"
 "        attr_accessor :actor_hp, :actor_id, :actor_valid, :enemy_hp, :enemy_index, :enemy_valid, :switch_id, :switch_valid, :turn_a, :turn_b, :turn_valid\n"
 "        def initialize\n"
 "          @actor_hp = 50\n"
 "          @actor_id = 1\n"
 "          @actor_valid = false\n"
 "          @enemy_hp = 50\n"
 "          @enemy_index = 0\n"
 "          @enemy_valid = false\n"
 "          @switch_id = 1\n"
 "          @switch_valid = false\n"
 "          @turn_a = 0\n"
 "          @turn_b = 0\n"
 "          @turn_valid = false\n"
 "          @turn_ending = false\n"
 "        end\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class Animation\n"
 "    attr_accessor :frame_max, :frames, :id, :name, :position, :timings\n"
 "    attr_accessor :animation1_hue, :animation1_name, :animation2_hue, :animation2_name\n"
 "    def initialize\n"
 "      @animation1_hue = 0\n"
 "      @animation1_name = \"\"\n"
 "      @animation2_hue = 0\n"
 "      @animation2_name = \"\"\n"
 "      @frame_max = 1\n"
 "      @frames = [RPG::Animation::Frame.new]\n"
 "      @id = 0\n"
 "      @name = \"\"\n"
 "      @position = 1\n"
 "      @timings = []\n"
 "    end\n"
 "    class Frame\n"
 "      attr_accessor :cell_data, :cell_max\n"
 "      def initialize\n"
 "        @cell_data = Table.new(0, 0)\n"
 "        @cell_max = 0\n"
 "      end\n"
 "    end\n"
 "    class Timing\n"
 "      attr_accessor :flash_color, :flash_duration, :flash_scope, :frame, :se\n"
 "      def initialize\n"
 "        @flash_color = Color.new(255, 255, 255, 255)\n"
 "        @flash_duration = 5\n"
 "        @flash_scope = 0\n"
 "        @frame = 0\n"
 "        @se = RPG::SE.new(\"\", 80)\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class CommonEvent\n"
 "    attr_accessor :id, :name, :trigger, :switch_id, :list\n"
 "    def initialize\n"
 "      @id = 0\n"
 "      @list = [RPG::EventCommand.new]\n"
 "      @name = \"\"\n"
 "      @switch_id = 1\n"
 "      @trigger = 0\n"
 "    end\n"
 "  end\n"
 "  class System\n"
 "    attr_accessor :airship, :boat, :game_title, :ship, :sounds, :terms, :version_id\n"
 "    attr_accessor :battle_bgm, :battle_end_me, :battler_hue, :battler_name, :edit_map_id, :elements, :gameover_me, :party_members, :start_map_id, :start_x, :start_y, :switches, :test_battlers, :test_troop_id, :title_bgm, :variables\n"
 "    attr_accessor :passages\n"
 "    def initialize\n"
 "      @airship = RPG::System::Vehicle.new\n"
 "      @battle_bgm = RPG::BGM.new\n"
 "      @battle_end_me = RPG::ME.new\n"
 "      @battler_hue = 0\n"
 "      @battler_name = \"\"\n"
 "      @boat = RPG::System::Vehicle.new\n"
 "      @edit_map_id = 1\n"
 "      @elements = [nil, \"\"]\n"
 "      @game_title = \"\"\n"
 "      @gameover_me = RPG::ME.new\n"
 "      @party_members = [1]\n"
 "      @passages = Table.new(8192)\n"
 "      @ship = RPG::System::Vehicle.new\n"
 "      @sounds = Array.new(20) { RPG::SE.new }\n"
 "      @start_map_id = 1\n"
 "      @start_x = 0\n"
 "      @start_y = 0\n"
 "      @switches = [nil, \"\"]\n"
 "      @terms = RPG::System::Terms.new\n"
 "      @test_battlers = []\n"
 "      @test_troop_id = 1\n"
 "      @title_bgm = RPG::BGM.new\n"
 "      @variables = [nil, \"\"]\n"
 "      @version_id = 0\n"
 "    end\n"
 "    class Terms\n"
 "      attr_accessor :agi, :armor1, :armor2, :armor3, :armor4, :atk, :attack, :equip, :gold, :guard, :hp, :item, :skill, :weapon\n"
 "      attr_accessor :cancel, :continue, :def, :escape, :fight, :game_end, :hp_a, :level, :level_a, :mp, :mp_a, :new_game, :save, :shutdown, :spi, :status, :to_title, :weapon1, :weapon2\n"
 "      def initialize\n"
 "        @agi = \"\"\n"
 "        @armor1 = \"\"\n"
 "        @armor2 = \"\"\n"
 "        @armor3 = \"\"\n"
 "        @armor4 = \"\"\n"
 "        @atk = \"\"\n"
 "        @attack = \"\"\n"
 "        @cancel = \"\"\n"
 "        @continue = \"\"\n"
 "        @def = \"\"\n"
 "        @equip = \"\"\n"
 "        @escape = \"\"\n"
 "        @fight = \"\"\n"
 "        @game_end = \"\"\n"
 "        @gold = \"\"\n"
 "        @guard = \"\"\n"
 "        @hp = \"\"\n"
 "        @hp_a = \"\"\n"
 "        @item = \"\"\n"
 "        @level = \"\"\n"
 "        @level_a = \"\"\n"
 "        @mp = \"\"\n"
 "        @mp_a = \"\"\n"
 "        @new_game = \"\"\n"
 "        @save = \"\"\n"
 "        @shutdown = \"\"\n"
 "        @skill = \"\"\n"
 "        @spi = \"\"\n"
 "        @status = \"\"\n"
 "        @to_title = \"\"\n"
 "        @weapon1 = \"\"\n"
 "        @weapon2 = \"\"\n"
 "        @weapon = \"\"\n"
 "      end\n"
 "    end\n"
 "    class TestBattler\n"
 "      attr_accessor :actor_id, :level\n"
 "      attr_accessor :armor1_id, :armor2_id, :armor3_id, :armor4_id, :weapon_id\n"
 "      def initialize\n"
 "        @actor_id = 1\n"
 "        @level = 1\n"
 "        @armor1_id = 0\n"
 "        @armor2_id = 0\n"
 "        @armor3_id = 0\n"
 "        @armor4_id = 0\n"
 "        @weapon_id = 0\n"
 "      end\n"
 "    end\n"
 "    class Vehicle\n"
 "      attr_accessor :bgm, :character_index, :character_name, :start_map_id, :start_x, :start_y\n"
 "      def initialize\n"
 "        @bgm = RPG::BGM.new\n"
 "        @character_index = 0\n"
 "        @character_name = \"\"\n"
 "        @start_map_id = 0\n"
 "        @start_x = 0\n"
 "        @start_y = 0\n"
 "      end\n"
 "    end\n"
 "  end\n"
 "  class AudioFile\n"
 "    attr_accessor :name, :pitch, :volume\n"
 "    def initialize(name = \"\", volume = 100, pitch = 100)\n"
 "      @name = name\n"
 "      @pitch = pitch\n"
 "      @volume = volume\n"
 "    end\n"
 "  end\n"
 "  class BGM < AudioFile\n"
 "    def play\n"
 "      if @name == \"\"\n"
 "        Audio.bgm_stop\n"
 "        @@last = BGM.new\n"
 "      else\n"
 "        Audio.bgm_play(\"Audio/BGM/#@name\", @volume, @pitch)\n"
 "        @@last = self\n"
 "      end\n"
 "    end\n"
 "    def self.last\n"
 "      @@last\n"
 "    end\n"
 "    def self.stop\n"
 "      Audio.bgm_stop\n"
 "      @@last = BGM.new\n"
 "    end\n"
 "    def self.fade(time)\n"
 "      Audio.bgm_fade(time)\n"
 "      @@last = BGM.new\n"
 "    end\n"
 "    def initialize(name = \"\", volume = 100, pitch = 100)\n"
 "      super(name, volume, pitch)\n"
 "    end\n"
 "    @@last = BGM.new\n"
 "  end\n"
 "  class BGS < AudioFile\n"
 "    def play\n"
 "      if @name == \"\"\n"
 "        Audio.bgs_stop\n"
 "        @@last = BGS.new\n"
 "      else\n"
 "        Audio.bgs_play(\"Audio/BGS/#@name\", @volume, @pitch)\n"
 "        @@last = self\n"
 "      end\n"
 "    end\n"
 "    def self.last\n"
 "      @@last\n"
 "    end\n"
 "    def self.stop\n"
 "      Audio.bgs_stop\n"
 "      @@last = BGS.new\n"
 "    end\n"
 "    def self.fade(time)\n"
 "      Audio.bgs_fade(time)\n"
 "      @@last = BGS.new\n"
 "    end\n"
 "    def initialize(name = \"\", volume = 100, pitch = 100)\n"
 "      super(name, volume, pitch)\n"
 "    end\n"
 "    @@last = BGS.new\n"
 "  end\n"
 "  class ME < AudioFile\n"
 "    def play\n"
 "      if @name == \"\"\n"
 "        Audio.me_stop\n"
 "      else\n"
 "        Audio.me_play(\"Audio/ME/#@name\", @volume, @pitch)\n"
 "      end\n"
 "    end\n"
 "    def self.stop\n"
 "      Audio.me_stop\n"
 "    end\n"
 "    def self.fade(time)\n"
 "      Audio.me_fade(time)\n"
 "    end\n"
 "    def initialize(name = \"\", volume = 100, pitch = 100)\n"
 "      super(name, volume, pitch)\n"
 "    end\n"
 "  end\n"
 "  class SE < AudioFile\n"
 "    def play\n"
 "      if @name != \"\"\n"
 "        Audio.se_play(\"Audio/SE/#@name\", @volume, @pitch)\n"
 "      end\n"
 "    end\n"
 "    def self.stop\n"
 "      Audio.se_stop\n"
 "    end\n"
 "    def initialize(name = \"\", volume = 100, pitch = 100)\n"
 "      super(name, volume, pitch)\n"
 "    end\n"
 "  end\n"
 "end\n"
 "\n"
// TODO: implement fake DL and Win32API
 "\n"
 "def save_data(obj, filename)\n"
 "  File.open(filename.gsub(/\\\\/, \"/\"), \"wb\") do|f|\n"
 "    Marshal.dump(obj, f)\n"
 "  end\n"
 "end\n"
;
